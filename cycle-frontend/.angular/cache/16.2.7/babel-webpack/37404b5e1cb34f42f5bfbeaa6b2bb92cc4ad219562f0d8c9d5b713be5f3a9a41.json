{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class GuestGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate() {\n    if (!this.authService.isAuthenticated) {\n      return true;\n    } else {\n      this.router.navigate(['/spots']); // Redirect to the spots page if authenticated\n      return false;\n    }\n  }\n  static #_ = this.ɵfac = function GuestGuard_Factory(t) {\n    return new (t || GuestGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: GuestGuard,\n    factory: GuestGuard.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["GuestGuard","constructor","authService","router","canActivate","isAuthenticated","navigate","_","i0","ɵɵinject","i1","AuthService","i2","Router","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Mobile Programming\\cycle_around_world\\cycle-frontend\\src\\app\\guest.guard.ts"],"sourcesContent":["// guest.guard.ts\n\nimport { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GuestGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(): boolean {\n    if (!this.authService.isAuthenticated) {\n      return true;\n    } else {\n      this.router.navigate(['/spots']); // Redirect to the spots page if authenticated\n      return false;\n    }\n  }\n}\n"],"mappings":";;;AASA,OAAM,MAAOA,UAAU;EACrBC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;EAAW;EAEvEC,WAAWA,CAAA;IACT,IAAI,CAAC,IAAI,CAACF,WAAW,CAACG,eAAe,EAAE;MACrC,OAAO,IAAI;KACZ,MAAM;MACL,IAAI,CAACF,MAAM,CAACG,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;MAClC,OAAO,KAAK;;EAEhB;EAAC,QAAAC,CAAA,G;qBAVUP,UAAU,EAAAQ,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAVd,UAAU;IAAAe,OAAA,EAAVf,UAAU,CAAAgB,IAAA;IAAAC,UAAA,EAFT;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}