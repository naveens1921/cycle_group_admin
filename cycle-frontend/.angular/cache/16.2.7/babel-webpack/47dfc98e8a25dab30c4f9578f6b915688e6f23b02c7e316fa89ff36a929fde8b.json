{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SpotService {\n  constructor(http) {\n    this.http = http;\n  }\n  // Helper function to retrieve the token from local storage\n  getToken() {\n    return localStorage.getItem('token');\n  }\n  // Get spot names with authorization\n  getSpotNames() {\n    const token = this.getToken();\n    const headers = new HttpHeaders().set('Authorization', `${token}`);\n    const options = {\n      headers\n    };\n    // Adjust the URL to match your server's endpoint\n    return this.http.get('http://localhost:4000/spots/spots', options);\n  }\n  static #_ = this.ɵfac = function SpotService_Factory(t) {\n    return new (t || SpotService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SpotService,\n    factory: SpotService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","SpotService","constructor","http","getToken","localStorage","getItem","getSpotNames","token","headers","set","options","get","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Mobile Programming\\cycle_around_world\\cycle-frontend\\src\\app\\spot.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpotService {\n  constructor(private http: HttpClient) {}\n\n  // Helper function to retrieve the token from local storage\n  private getToken(): string | null {\n    return localStorage.getItem('token');\n  }\n\n  // Get spot names with authorization\n  getSpotNames(): Observable<string[]> {\n    const token = this.getToken();\n    const headers = new HttpHeaders().set('Authorization', `${token}`);\n    const options = { headers };\n    \n    // Adjust the URL to match your server's endpoint\n    return this.http.get<string[]>('http://localhost:4000/spots/spots', options);\n  }\n\n  // Add other methods for interacting with your server as needed.\n}\n"],"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAM9D,OAAM,MAAOC,WAAW;EACtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEvC;EACQC,QAAQA,CAAA;IACd,OAAOC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EACtC;EAEA;EACAC,YAAYA,CAAA;IACV,MAAMC,KAAK,GAAG,IAAI,CAACJ,QAAQ,EAAE;IAC7B,MAAMK,OAAO,GAAG,IAAIT,WAAW,EAAE,CAACU,GAAG,CAAC,eAAe,EAAE,GAAGF,KAAK,EAAE,CAAC;IAClE,MAAMG,OAAO,GAAG;MAAEF;IAAO,CAAE;IAE3B;IACA,OAAO,IAAI,CAACN,IAAI,CAACS,GAAG,CAAW,mCAAmC,EAAED,OAAO,CAAC;EAC9E;EAAC,QAAAE,CAAA,G;qBAhBUZ,WAAW,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXjB,WAAW;IAAAkB,OAAA,EAAXlB,WAAW,CAAAmB,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}