{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SpotService {\n  constructor(http) {\n    this.http = http;\n  }\n  getSpotNames() {\n    // Adjust the URL to match your server's endpoint\n    return this.http.get('http://localhost:4000/spots/spotname/tenspots');\n  }\n  static #_ = this.ɵfac = function SpotService_Factory(t) {\n    return new (t || SpotService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SpotService,\n    factory: SpotService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["SpotService","constructor","http","getSpotNames","get","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Mobile Programming\\cycle_around_world\\cycle-frontend\\src\\app\\spot.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpotService {\n  constructor(private http: HttpClient) {}\n\n  getSpotNames(): Observable<string[]> {\n    // Adjust the URL to match your server's endpoint\n    return this.http.get<string[]>('http://localhost:4000/spots/spotname/tenspots');\n  }\n\n  // Add other methods for interacting with your server as needed.\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,WAAW;EACtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEvCC,YAAYA,CAAA;IACV;IACA,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAW,+CAA+C,CAAC;EACjF;EAAC,QAAAC,CAAA,G;qBANUL,WAAW,EAAAM,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXV,WAAW;IAAAW,OAAA,EAAXX,WAAW,CAAAY,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}