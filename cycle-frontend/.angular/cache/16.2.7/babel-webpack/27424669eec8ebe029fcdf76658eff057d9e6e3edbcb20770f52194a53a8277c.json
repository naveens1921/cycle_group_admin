{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class LoginComponent {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.username = '';\n    this.password = '';\n    this.loginMessage = '';\n  }\n  login() {\n    // Create an object with the username and password\n    const userData = {\n      username: this.username,\n      password: this.password\n    };\n    // Send a POST request to the server's login endpoint\n    this.http.post('http://localhost:4000/auth/login', userData).subscribe(response => {\n      // Assuming the server responds with a JWT token in the 'token' property\n      const token = response.token;\n      // Save the token in a secure place, such as a cookie or local storage.\n      // Example: localStorage.setItem('token', token);\n      // Redirect to the user's dashboard or another page upon successful login\n      this.router.navigate(['/dashboard']);\n    }, error => {\n      this.loginMessage = 'Login failed. Please check your credentials.';\n    });\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 15,\n    vars: 3,\n    consts: [[1, \"login-form\"], [1, \"form-group\"], [\"for\", \"username\"], [\"type\", \"text\", \"id\", \"username\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"p\");\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 1)(6, \"label\", 2);\n        i0.ɵɵtext(7, \"Username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_8_listener($event) {\n          return ctx.username = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"div\", 1)(10, \"label\", 4);\n        i0.ɵɵtext(11, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_12_listener($event) {\n          return ctx.password = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_13_listener() {\n          return ctx.login();\n        });\n        i0.ɵɵtext(14, \"Login\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.loginMessage);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.username);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.password);\n      }\n    },\n    dependencies: [i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["LoginComponent","constructor","http","router","username","password","loginMessage","login","userData","post","subscribe","response","token","navigate","error","_","i0","ɵɵdirectiveInject","i1","HttpClient","i2","Router","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginComponent_Template_input_ngModelChange_8_listener","$event","LoginComponent_Template_input_ngModelChange_12_listener","LoginComponent_Template_button_click_13_listener","ɵɵadvance","ɵɵtextInterpolate","ɵɵproperty"],"sources":["C:\\Users\\Mobile Programming\\cycle_around_world\\cycle-frontend\\src\\app\\login\\login.component.ts","C:\\Users\\Mobile Programming\\cycle_around_world\\cycle-frontend\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  username: string = '';\n  password: string = '';\n  loginMessage: string = '';\n\n  constructor(private http: HttpClient, private router: Router) {}\n\n  login() {\n    // Create an object with the username and password\n    const userData = {\n      username: this.username,\n      password: this.password\n    };\n\n    // Send a POST request to the server's login endpoint\n    this.http.post('http://localhost:4000/auth/login', userData).subscribe(\n      (response: any) => {\n        // Assuming the server responds with a JWT token in the 'token' property\n        const token = response.token;\n        // Save the token in a secure place, such as a cookie or local storage.\n        // Example: localStorage.setItem('token', token);\n\n        // Redirect to the user's dashboard or another page upon successful login\n        this.router.navigate(['/dashboard']);\n      },\n      (error) => {\n        this.loginMessage = 'Login failed. Please check your credentials.';\n      }\n    );\n  }\n}\n","<div class=\"login-form\">\n    <h2>Login</h2>\n    <p>{{ loginMessage }}</p>\n  \n    <div class=\"form-group\">\n      <label for=\"username\">Username</label>\n      <input type=\"text\" id=\"username\" [(ngModel)]=\"username\" />\n    </div>\n  \n    <div class=\"form-group\">\n      <label for=\"password\">Password</label>\n      <input type=\"password\" id=\"password\" [(ngModel)]=\"password\" />\n    </div>\n  \n    <button (click)=\"login()\">Login</button>\n  </div>\n  "],"mappings":";;;;AASA,OAAM,MAAOA,cAAc;EAKzBC,YAAoBC,IAAgB,EAAUC,MAAc;IAAxC,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,MAAM,GAANA,MAAM;IAJpD,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,YAAY,GAAW,EAAE;EAEsC;EAE/DC,KAAKA,CAAA;IACH;IACA,MAAMC,QAAQ,GAAG;MACfJ,QAAQ,EAAE,IAAI,CAACA,QAAQ;MACvBC,QAAQ,EAAE,IAAI,CAACA;KAChB;IAED;IACA,IAAI,CAACH,IAAI,CAACO,IAAI,CAAC,kCAAkC,EAAED,QAAQ,CAAC,CAACE,SAAS,CACnEC,QAAa,IAAI;MAChB;MACA,MAAMC,KAAK,GAAGD,QAAQ,CAACC,KAAK;MAC5B;MACA;MAEA;MACA,IAAI,CAACT,MAAM,CAACU,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;IACtC,CAAC,EACAC,KAAK,IAAI;MACR,IAAI,CAACR,YAAY,GAAG,8CAA8C;IACpE,CAAC,CACF;EACH;EAAC,QAAAS,CAAA,G;qBA7BUf,cAAc,EAAAgB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAdtB,cAAc;IAAAuB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCT3Bb,EAAA,CAAAe,cAAA,aAAwB;QAChBf,EAAA,CAAAgB,MAAA,YAAK;QAAAhB,EAAA,CAAAiB,YAAA,EAAK;QACdjB,EAAA,CAAAe,cAAA,QAAG;QAAAf,EAAA,CAAAgB,MAAA,GAAkB;QAAAhB,EAAA,CAAAiB,YAAA,EAAI;QAEzBjB,EAAA,CAAAe,cAAA,aAAwB;QACAf,EAAA,CAAAgB,MAAA,eAAQ;QAAAhB,EAAA,CAAAiB,YAAA,EAAQ;QACtCjB,EAAA,CAAAe,cAAA,eAA0D;QAAzBf,EAAA,CAAAkB,UAAA,2BAAAC,uDAAAC,MAAA;UAAA,OAAAN,GAAA,CAAA1B,QAAA,GAAAgC,MAAA;QAAA,EAAsB;QAAvDpB,EAAA,CAAAiB,YAAA,EAA0D;QAG5DjB,EAAA,CAAAe,cAAA,aAAwB;QACAf,EAAA,CAAAgB,MAAA,gBAAQ;QAAAhB,EAAA,CAAAiB,YAAA,EAAQ;QACtCjB,EAAA,CAAAe,cAAA,gBAA8D;QAAzBf,EAAA,CAAAkB,UAAA,2BAAAG,wDAAAD,MAAA;UAAA,OAAAN,GAAA,CAAAzB,QAAA,GAAA+B,MAAA;QAAA,EAAsB;QAA3DpB,EAAA,CAAAiB,YAAA,EAA8D;QAGhEjB,EAAA,CAAAe,cAAA,iBAA0B;QAAlBf,EAAA,CAAAkB,UAAA,mBAAAI,iDAAA;UAAA,OAASR,GAAA,CAAAvB,KAAA,EAAO;QAAA,EAAC;QAACS,EAAA,CAAAgB,MAAA,aAAK;QAAAhB,EAAA,CAAAiB,YAAA,EAAS;;;QAZrCjB,EAAA,CAAAuB,SAAA,GAAkB;QAAlBvB,EAAA,CAAAwB,iBAAA,CAAAV,GAAA,CAAAxB,YAAA,CAAkB;QAIcU,EAAA,CAAAuB,SAAA,GAAsB;QAAtBvB,EAAA,CAAAyB,UAAA,YAAAX,GAAA,CAAA1B,QAAA,CAAsB;QAKlBY,EAAA,CAAAuB,SAAA,GAAsB;QAAtBvB,EAAA,CAAAyB,UAAA,YAAAX,GAAA,CAAAzB,QAAA,CAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}