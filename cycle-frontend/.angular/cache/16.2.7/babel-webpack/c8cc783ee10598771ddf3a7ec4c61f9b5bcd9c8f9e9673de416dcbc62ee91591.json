{"ast":null,"code":"import { NavigationEnd } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nfunction AppComponent_button_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 1);\n    i0.ɵɵlistener(\"click\", function AppComponent_button_0_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.logout());\n    });\n    i0.ɵɵtext(1, \"Logout\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class AppComponent {\n  constructor(router) {\n    this.router = router;\n    this.title = 'cycle-frontend';\n    this.isHomePage = false;\n    this.isAuthenticated = false;\n    this.router.events.subscribe(event => {\n      if (event instanceof NavigationEnd) {\n        // Check the route to determine whether the user is authenticated\n        this.isAuthenticated = this.isRouteAuthenticated(event.url);\n      }\n    });\n  }\n  isRouteAuthenticated(url) {\n    // You can implement your logic to check if the user is authenticated for a given route\n    // For example, check if the route is not '/login' or '/signup'\n    return !['/login', '/register', '/'].includes(url);\n  }\n  logout() {\n    // Perform any logout actions here (e.g., clearing user data, tokens, etc.)\n    // For simplicity, we will clear a token from localStorage.\n    localStorage.removeItem('token');\n    // After logout, navigate to the home page (assuming your home page route is '/home').\n    this.router.navigate(['']);\n  }\n  static #_ = this.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 2,\n    vars: 1,\n    consts: [[3, \"click\", 4, \"ngIf\"], [3, \"click\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, AppComponent_button_0_Template, 2, 0, \"button\", 0);\n        i0.ɵɵelement(1, \"router-outlet\");\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.isAuthenticated);\n      }\n    },\n    dependencies: [i2.NgIf, i1.RouterOutlet],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["NavigationEnd","i0","ɵɵelementStart","ɵɵlistener","AppComponent_button_0_Template_button_click_0_listener","ɵɵrestoreView","_r2","ctx_r1","ɵɵnextContext","ɵɵresetView","logout","ɵɵtext","ɵɵelementEnd","AppComponent","constructor","router","title","isHomePage","isAuthenticated","events","subscribe","event","isRouteAuthenticated","url","includes","localStorage","removeItem","navigate","_","ɵɵdirectiveInject","i1","Router","_2","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵtemplate","AppComponent_button_0_Template","ɵɵelement","ɵɵproperty"],"sources":["C:\\Users\\Mobile Programming\\cycle_around_world\\cycle-frontend\\src\\app\\app.component.ts","C:\\Users\\Mobile Programming\\cycle_around_world\\cycle-frontend\\src\\app\\app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router,NavigationEnd } from '@angular/router';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'cycle-frontend';\n  isHomePage: boolean = false;\n  isAuthenticated: boolean = false;\n\n  constructor(private router: Router) {\n    this.router.events.subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        // Check the route to determine whether the user is authenticated\n        this.isAuthenticated = this.isRouteAuthenticated(event.url);\n      }\n    });\n  }\n\n  isRouteAuthenticated(url: string): boolean {\n    // You can implement your logic to check if the user is authenticated for a given route\n    // For example, check if the route is not '/login' or '/signup'\n    return !['/login', '/register','/'].includes(url);\n  }\n  logout() {\n    // Perform any logout actions here (e.g., clearing user data, tokens, etc.)\n    // For simplicity, we will clear a token from localStorage.\n    localStorage.removeItem('token');\n    \n    // After logout, navigate to the home page (assuming your home page route is '/home').\n    this.router.navigate(['']);\n  }\n}","<button *ngIf=\"isAuthenticated\" (click)=\"logout()\">Logout</button>\n<router-outlet></router-outlet>"],"mappings":"AACA,SAAgBA,aAAa,QAAQ,iBAAiB;;;;;;;ICDtDC,EAAA,CAAAC,cAAA,gBAAmD;IAAnBD,EAAA,CAAAE,UAAA,mBAAAC,uDAAA;MAAAH,EAAA,CAAAI,aAAA,CAAAC,GAAA;MAAA,MAAAC,MAAA,GAAAN,EAAA,CAAAO,aAAA;MAAA,OAASP,EAAA,CAAAQ,WAAA,CAAAF,MAAA,CAAAG,MAAA,EAAQ;IAAA,EAAC;IAACT,EAAA,CAAAU,MAAA,aAAM;IAAAV,EAAA,CAAAW,YAAA,EAAS;;;ADOlE,OAAM,MAAOC,YAAY;EAKvBC,YAAoBC,MAAc;IAAd,KAAAA,MAAM,GAANA,MAAM;IAJ1B,KAAAC,KAAK,GAAG,gBAAgB;IACxB,KAAAC,UAAU,GAAY,KAAK;IAC3B,KAAAC,eAAe,GAAY,KAAK;IAG9B,IAAI,CAACH,MAAM,CAACI,MAAM,CAACC,SAAS,CAAEC,KAAK,IAAI;MACrC,IAAIA,KAAK,YAAYrB,aAAa,EAAE;QAClC;QACA,IAAI,CAACkB,eAAe,GAAG,IAAI,CAACI,oBAAoB,CAACD,KAAK,CAACE,GAAG,CAAC;;IAE/D,CAAC,CAAC;EACJ;EAEAD,oBAAoBA,CAACC,GAAW;IAC9B;IACA;IACA,OAAO,CAAC,CAAC,QAAQ,EAAE,WAAW,EAAC,GAAG,CAAC,CAACC,QAAQ,CAACD,GAAG,CAAC;EACnD;EACAb,MAAMA,CAAA;IACJ;IACA;IACAe,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;IAEhC;IACA,IAAI,CAACX,MAAM,CAACY,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;EAC5B;EAAC,QAAAC,CAAA,G;qBA1BUf,YAAY,EAAAZ,EAAA,CAAA4B,iBAAA,CAAAC,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAZnB,YAAY;IAAAoB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCPzBtC,EAAA,CAAAwC,UAAA,IAAAC,8BAAA,oBAAkE;QAClEzC,EAAA,CAAA0C,SAAA,oBAA+B;;;QADtB1C,EAAA,CAAA2C,UAAA,SAAAJ,GAAA,CAAAtB,eAAA,CAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}